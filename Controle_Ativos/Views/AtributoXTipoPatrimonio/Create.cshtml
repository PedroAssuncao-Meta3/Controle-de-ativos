@model Controle_Ativos.ViewModel.AtributoXTipoPatrimonioViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>AtributoXTipoPatrimonio</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TipoPatrimonioId" class="control-label">Tipo do Patrimonio</label>
                <input asp-for="TipoPatrimonio.Descricao" class="form-control" />
                @*<select asp-for="TipoPatrimonioId" class="form-control" asp-items="@(new SelectList(Model.TipoPatrimonios, "Id", "Nome"))"></select>*@
                <span asp-validation-for="TipoPatrimonio.Descricao" class="text-danger"></span>
            </div>
            <table id="AtrTable" class="table">
                <thead>
                    <tr>
                        <th>
                            Nome Atributo
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Atributos.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.EditorFor(x => x.Atributos[i].Descricao, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                <button id="btnadd-@i" type="button"  class="btn btn-sm btn-secondary visible"
                                        onclick="AddItem(this.id)">Adicionar</button>
                                <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger invisible"
                                        onclick="DeleteItem(this.id)">Deletar</button>
                            </td>
                        </tr>
                        }
                </tbody>
            </table>

            <input  type="hidden" id="hdnLastIndex" value="0"/>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
    const { Tab } = require("../../wwwroot/lib/bootstrap/dist/js/bootstrap.bundle");

        function DeleteItem(btn) {
            let tr = document.getElementById(btn).parentElement.parentElement
            let parent = tr.parentElement
            parent.removeChild(tr)
            //$(btn).closest("tr").remove();
        }

        function AddItem(btn) {

            var table = document.getElementById('AtrTable');
            var rows = table.getElementsByTagName('tr');

            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            var lastrowidx = document.getElementById('hdnLastIndex').value;

            var nextrowIdx = eval(lastrowidx) + 1;

            document.getElementById('hdnLastIndex').value = nextrowIdx;

            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowidx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowidx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowidx, '-' + nextrowIdx);

            var newRow = table.insertRow();
            newRow.innerHTML = rowOuterHtml;

            var btnAddID = btn;
            var btnDeleteID = btnAddID.replaceAll('btnadd', 'btnremove');

            var delbtn = document.getElementById(btnDeleteID);
            delbtn.classList.add('visible');
            delbtn.classList.remove('invisible');

            var addbtn = document.getElementById(btnAddID);
            addbtn.classList.remove('visible');
            addbtn.classList.add('invisible');
        }

        
    </script>
}
